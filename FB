local CollectionService = game:GetService("CollectionService")
local RunService = game:GetService("RunService")

-- Table to keep track of highlighted objects
local highlightedObjects = {}

-- Function to apply highlight to a part or model
local function applyHighlight(object)
    if not highlightedObjects[object] then
        local highlight = Instance.new("Highlight")
        highlight.Name = "InteractionHighlight"
        highlight.FillColor = Color3.fromRGB(255, 255, 0) -- Yellow fill
        highlight.OutlineColor = Color3.fromRGB(255, 255, 255) -- White outline
        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        highlight.Adornee = object
        highlight.Parent = object
        highlightedObjects[object] = highlight
    end
end

-- Function to remove highlight from objects no longer tagged
local function removeObsoleteHighlights()
    for object, highlight in pairs(highlightedObjects) do
        if not CollectionService:HasTag(object, "Interactive") then
            highlight:Destroy()
            highlightedObjects[object] = nil
        end
    end
end

-- Continuous loop to apply highlights
RunService.RenderStepped:Connect(function()
    for _, object in ipairs(CollectionService:GetTagged("Interactive")) do
        applyHighlight(object)
    end
    removeObsoleteHighlights()
end)
